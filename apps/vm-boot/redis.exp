#!/usr/bin/expect -f

#starts guest vm, run benchmarks, poweroff
set timeout -1
set kernel_dir [lindex $argv 0]
set driver_dir [lindex $argv 1]
set cpu_num [lindex $argv 2]
set memory_size [lindex $argv 3]
set vm_ip [lindex $argv 4]
set cpu_set [lindex $argv 5]

#Start the guest VM
spawn sudo taskset -c $cpu_set \
		qemu-system-x86_64 \
		--enable-kvm \
		-cpu host \
		-smp $cpu_num \
		-m $memory_size \
		-kernel $kernel_dir/arch/x86_64/boot/bzImage \
		-nographic -serial mon:stdio \
		-drive file=$driver_dir/bullseye.img,format=raw \
		-append "console=ttyS0 root=/dev/sda earlyprintk=serial net.ifnames=0" \
		-netdev tap,id=ens1f0,ifname=tap0,script=no,downscript=no \
		-device virtio-net,netdev=ens1f0,mac=52:55:00:d1:55:01 \
		-monitor unix:qemu-monitor-migration-src,server,nowait

#Login process
expect "syzkaller login: "
#Enter username
send "root\r"

expect "root@syzkaller:"
send "ip addr add $vm_ip/24 dev eth0\r"

expect "root@syzkaller:"
send "cd redis\r"

# Start Redis servers on each core
for {set i 0} {$i < $cpu_num} {incr i} {
	set redis_port [expr $i + 12345]

    expect "root@syzkaller:"
    # Start Redis server on core $i
    send "taskset -c $i redis-server redis-server.conf --port $redis_port\r"
}

expect "root@syzkaller:"
send "cd ..\r"

interact

#Do whatever you want to do with in the guest VM. ( Run a process and write result to log )